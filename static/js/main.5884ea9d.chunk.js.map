{"version":3,"sources":["components/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Grid","props","console","log","className","columnDefs","columns","pagination","paginationPageSize","domLayout","rowData","defaultColDef","filter","floatingFilter","sortable","App","make","model","price","id","Name","Age","Location","headerName","field","style","height","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA2BeA,EApBF,SAACC,GAEV,OADHC,QAAQC,IAAIF,GAEL,8BAEE,qBAAKG,UAAU,kBAAf,SACE,cAAC,cAAD,CACEC,WAAYJ,EAAMK,QAClBC,YAAY,EACZC,mBAAoB,GACpBC,UAAU,aACVC,QAAST,EAAMS,QACfC,cAAe,CAAEC,QAAQ,EAAMC,gBAAgB,EAAMC,UAAU,UCyD9DC,MApEf,WAEE,IAqBML,EAAU,CACd,CAACM,KAAM,SAAUC,MAAO,SAAUC,MAAO,MACzC,CAACF,KAAM,OAAQC,MAAO,SAAUC,MAAO,MACvC,CAACF,KAAM,UAAWC,MAAO,SAAUC,MAAO,OAS5C,OACE,sBAAKd,UAAU,MAAf,UAEC,cAAC,EAAD,CAAMM,QApCS,CAChB,CACES,GAAI,EACJC,KAAM,SACNC,IAAK,GACLC,SAAU,aAEZ,CAAEH,GAAI,EAAGC,KAAM,MAAOC,IAAK,GAAIC,SAAU,UACzC,CAAEH,GAAI,EAAGC,KAAM,MAAOC,IAAK,GAAIC,SAAU,WACzC,CAAEH,GAAI,EAAGC,KAAM,QAASC,IAAK,GAAIC,SAAU,SAC3C,CAAEH,GAAI,EAAGC,KAAM,QAASC,IAAK,GAAIC,SAAU,cA2B/BhB,QAxBE,CACd,CAAEiB,WAAY,KAAMC,MAAO,KAAMZ,OAAQ,QACzC,CAAEW,WAAY,OAAQC,MAAO,OAAQZ,OAAQ,sBAC7C,CAAEW,WAAY,MAAOC,MAAO,MAAOZ,OAAQ,sBAC3C,CAAEW,WAAY,WAAYC,MAAO,WAAYZ,OAAQ,yBAgCnD,cAAC,EAAD,CAAMF,QAAWA,EACPJ,QAvBC,CACf,CAAEiB,WAAY,KAAMC,MAAO,OAAQZ,OAAQ,sBAC3C,CAAEW,WAAY,OAAQC,MAAO,SAC7B,CAAED,WAAY,MAAOC,MAAO,QAASZ,OAAQ,yBAqBzC,qBAAKR,UAAU,kBAAkBqB,MAAO,CAACC,OAAQ,IAAKC,MAAO,KAA7D,SACE,eAAC,cAAD,CACIjB,QAASA,EACTH,YAAU,EACVI,cAAe,CAAEC,QAAQ,EAAMC,gBAAgB,EAAMC,UAAU,GAHnE,UAII,cAAC,eAAD,CAAcU,MAAM,OAAOZ,OAAO,uBAClC,cAAC,eAAD,CAAcY,MAAM,UACpB,cAAC,eAAD,CAAcA,MAAM,mBCxDjBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5884ea9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-enterprise';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\n\r\nconst Grid = (props) => {\r\n console.log(props);\r\n    return (\r\n        <div>\r\n         \r\n          <div className=\"ag-theme-alpine\">\r\n            <AgGridReact\r\n              columnDefs={props.columns}\r\n              pagination={true}\r\n              paginationPageSize={10}\r\n              domLayout=\"autoHeight\"\r\n              rowData={props.rowData}\r\n              defaultColDef={{ filter: true, floatingFilter: true, sortable: true }}\r\n            />\r\n    \r\n          </div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Grid;","import './App.css';\nimport React from 'react';\nimport {AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport Grid from './components/Grid';\n\nfunction App() {\n\n  const tableData = [\n    {\n      id: 1,\n      Name: 'Sanjay',\n      Age: 15,\n      Location: 'Bangalore'\n    },\n    { id: 2, Name: 'Def', Age: 43, Location: 'Mumbai' },\n    { id: 3, Name: 'Uff', Age: 30, Location: 'Chennai' },\n    { id: 4, Name: 'Ammse', Age: 87, Location: 'Delhi' },\n    { id: 5, Name: 'Yysse', Age: 28, Location: 'Hyderabad' }\n  ];\n\n  const columns = [\n    { headerName: \"Id\", field: \"id\", filter: \"hide\" },\n    { headerName: \"Name\", field: \"Name\", filter: \"agTextColumnFilter\" },\n    { headerName: \"Age\", field: \"Age\", filter: \"agTextColumnFilter\" },\n    { headerName: \"Location\", field: \"Location\", filter: \"agTextColumnFilter\" },\n    \n  ]\n  \n  const rowData = [\n    {make: \"Toyota\", model: \"Celica\", price: 35000},\n    {make: \"Ford\", model: \"Mondeo\", price: 32000},\n    {make: \"Porsche\", model: \"Boxter\", price: 72000}\n];\n\nconst columns2 = [\n  { headerName: \"Id\", field: \"make\", filter: \"agTextColumnFilter\" },\n  { headerName: \"Name\", field: \"model\" },\n  { headerName: \"Age\", field: \"price\", filter: \"agTextColumnFilter\" },\n]\n\n  return (\n    <div className=\"App\">\n      \n     <Grid rowData = {tableData}\n                columns = {columns}></Grid>\n      {/* <div className=\"ag-theme-alpine\">\n        <AgGridReact\n          columnDefs={columns}\n          pagination={true}\n          paginationPageSize={2}\n          domLayout=\"autoHeight\"\n          rowData={tableData}\n          defaultColDef={{ filter: true, floatingFilter: true, sortable: true }}\n        />\n\n      </div> */}\n      <Grid rowData = {rowData}\n                columns = {columns2}></Grid>\n      <div className=\"ag-theme-alpine\" style={{height: 400, width: 600}}>\n        <AgGridReact\n            rowData={rowData}\n            pagination\n            defaultColDef={{ filter: true, floatingFilter: true, sortable: true }}>\n            <AgGridColumn field=\"make\" filter=\"agTextColumnFilter\"></AgGridColumn>\n            <AgGridColumn field=\"model\"></AgGridColumn>\n            <AgGridColumn field=\"price\"></AgGridColumn>\n        </AgGridReact>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}